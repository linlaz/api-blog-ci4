openapi: "3.0.0"
info:
  title: "Safari Pahala Backend API"
  version: "1.0.0"
  description: "Backend Services of Safari Pahala"
  contact:
    name: "CodePanda"
    email: "codepanda@gmail.com"
components:
  securitySchemes:
    BearerAuth:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      description: "Enter the token with the 'Bearer ' prefix, e.g. 'Bearer abcde12345'"
  schemas:
    SimpleSuccessResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          example: true
        code:
          type: "integer"
          example: 200
        message:
          type: "string"
          example: "Action from method succeeded"
    ErrorResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          example: false
        code:
          type: "integer"
        message:
          type: "string"
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              source:
                type: "string"
              message:
                type: "string"
  responses:
    SimpleSuccess:
      description: "Success response for general action"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimpleSuccessResponse"
    ServerError:
      description: "Internal Server Error response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    DataNotFound:
      description: "Data Not Found response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    BadRequest:
      description: "Bad Request error response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ForbiddenError:
      description: "Forbidden error response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    UnauthorizedError:
      description: "Unauthorized error response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
paths:
  "/users/{id}":
    get:
      summary: "Get user by ID"
      tags:
        - User
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "user finded successfully"
                  data:
                    type: object
                    example:
                      id: "1"
                      name: "admin"
                      email: "admin@gmail.com"
                      password: "$2y$10$08hKaN9uka0QVCwiBvy5du4YE6EeuLtasdlkjasjdI51rdNjD7ki.JrCW9de2iC"
                      created_at: "2023-08-26 11:37:31"
                      updated_at: "2023-08-26 11:37:31"
                      deleted_at: null
        "404":
          $ref: "#/components/responses/DataNotFound"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  "/users":
    post:
      summary: "Create a new user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: "User created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleSuccessResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
servers:
  - url: "http://localhost:8080/api"
